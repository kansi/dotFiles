VIM SHORT CUTs

C-ww    : shift from nerd tree to buffer and back
C-n     : new tab in normal mode
j,k,l,h : move around in normal buffer
u       : undo in normal mode
<C-r>   : redo

Sex     : open file explorer in vim
Sex!    : open file explorer with vertically split\
R       : to rename a file in explorer
C-k     : to exit from insert mode
C-[     : to exit from insert mode
C-c     : to exit from insert mode



Normal mode
C-l        : to move b/w tabs
C-h        : to move b/w tabs
retab      : change a tab-based indent to use spaces instead
i {        : when visual mode pressing "i" along with "{" will select all the text in between "{}".
:vs        : splits the screen vertically
:split     : horizintal split
<shft>v    : goes to visual mode and select the while line
E          : jump to the end of word
:<         : shift lines one 'shiftwidth' left
:>         : shift lines one 'shiftwidth' right
gg         : go to the top of the file (any mode)
G          : goes to the end of the file (any mode)
ctrl-w_    : maximize current window
ctrl-w=    : make all equal size
ctrl + w | : Max out the width of the current split
ctrl+W T   : Break out current window into a new tabview
Ctrl-w H   : to go from horizontal to vertical layout.
Ctrl-w J   : to go from vertical to horizontal layout.
Ctrl-w r   : to swap the two buffers but keep the window layout the same.


insert mode
Use dictionary in vim (normal mode)
:set spell spelllang=en_us      : to enable spell checking
:setlocal spell spelllang=en_us :  to turn spell checking on only in the local buffer

]s      : move the cursor to the next misspelled word
[s      : move the cursor back to previous misspelled word
z=      : to see suggestions


Copy paste delete
yW      : yank from here (the cursor) to the end of the current/next (big) word.
y'a     : yank from here to the line containing the mark named 'a'.
diw     : delete the current word
di(     : delete within the current parens
di"     : delete the text between the quotes
d6w     : delete 6 words after cursor posn
d6j     : delete 6 lines down
d4b     : delete 4 words before cursor posn
D       : Delete contents of line after cursor
C       : Delete contents of line after cursor and insert new text. Press esc key to end insertion.
d$      : Delete all characters from cursor to end of line.
y$      : Copy from cursor position till end of line.
C-w     : to delete a word in insert mode (just place the cursor at end of the word)


Visual mode [v stands for visual mode, so execute these commands in normal mode]
v%      : move cursor to the starting/ending parenthesis or any type of bracket
          and then press this, whole text inside will be selected
vib     : place cursor inside the parenthesis block and select whole block
viB     : same as above, but for curly braces {}.
vi"     : for double quotes
vi'     : for single quotes
v$      : select text from current position till end of line




COOL unknowns:
:earlier 15m               : Reverts the document back to how it was 15 minutes ago
:later   15m               : similar functionalities
Shft-zz                         : it scrolls the screen to make this line appear in the middle. 
:r! <command>              : (pastes the output of an external command into the buffer.)
:r <filename>              : (pastes the contents of the <file> into the current file at the cursor position.) 
={movement}
=%                         : place cursor on the brackets or paran. and press this. it indent the code inside it
1,$w ~/nwfile              : this will save the lines from 1 till end of file($) in a file(nwfile) created in home dir.
4,6w >> ~/nwfile           : this will append the lines 4,5,6 to the nwfile
1,$!<command>              : this will pass the lines 1 till end($) to the command as input and the output will be printed in file.
ctrl-a                     : Increment number under the cursor.
ctrl-x                     : Decrement number under the cursor.
:1,$ s/{ctrl-V}{ctrl-M}//  : Strip DOS ctrl-M's
gv                         : starts visual mode with pervious selection
<ctrl-o>                   : to goto normal mode for just one command:

Search and replace

:s/foo/bar/           Change each 'foo' to 'bar' in the current line.
:s/foo/bar/g          Change first 'foo' to 'bar' in the current line.
:%s/foo/bar/          Change each 'foo' to 'bar' in all lines.
:%s/foo/bar/g         Change first occurance of 'foo' to 'bar' in all lines.
:%s/\<foo\>/bar/gc    Change only whole words exactly matching 'foo' to 'bar'; ask for confirmation. 
:5,12s/foo/bar/g      Change each 'foo' to 'bar' for all lines from line 5 to line 12 inclusive.
:'a,'bs/foo/bar/g     Change each 'foo' to 'bar' for all lines from mark a to mark b inclusive (see Note below).
:'<,'>s/foo/bar/g     When compiled with +visual, change each 'foo' to 'bar' for all lines within a visual selection.
                      Vim automatically appends the visual selection range ('<,'>) for any ex command when you select
                      an area and enter :. Also, see Note below.
:.,$s/foo/bar/g       Change each 'foo' to 'bar' for all lines from the current line (.) to the last line ($) inclusive.
:.,+2s/foo/bar/g      Change each 'foo' to 'bar' for the current line (.) and the two next lines (+2).
:g/^baz/s/foo/bar/g   Change each 'foo' to 'bar' in each line starting with 'baz'.
